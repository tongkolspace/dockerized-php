version: '3.8'
services:
  traefik:
    image: traefik:latest
    container_name: reverse-proxy-${APP_NAME}
    restart: unless-stopped
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=traefik-dashboard"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      # global redirect to https
      # - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      # - "traefik.http.routers.http-catchall.entrypoints=web"
      # - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # # middleware redirect
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "57710:57710"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/logs:/logs/
    networks:
      - external
  php-fpm:
    # Bisa diganti wordpress:6.4.1-php8.2
    # sesuaikan php ini
    image: easyengine/php8.1:v4.6.7
    container_name: php-fpm-${APP_NAME}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      TZ: ${TZ}
    volumes:
      - ../${APP_TYPE}:/var/www/html/
      - ./php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/zz-custom-php.ini
      - ./php-fpm/php-fpm-dev.conf:/usr/local/etc/php-fpm.d/easyengine.conf  
    networks:
      - external
      - internal
  nginx:
    image: tongkolspace/nginx-ee
    container_name: nginx-${APP_NAME}
    restart: unless-stopped
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ../${APP_TYPE}:/var/www/html
      - ../admin:/var/www/admin
      - ./nginx/sites-enabled/${APP_TYPE}.conf:/etc/nginx/sites-enabled/default
      - ./nginx/sites-enabled/admin.conf:/etc/nginx/sites-enabled/admin.conf
      - ./nginx/log:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/common-extra:/etc/nginx/common-extra
      - ./nginx/conf.d-extra:/etc/nginx/conf.d-extra
      - ./nginx/conf.d/cloudflare.conf:/etc/nginx/conf.d/cloudflare.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - php-fpm
      - redis
    networks:
      - external
      - internal
    environment:
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.${APP_NAME}.tls=true"
      # - "traefik.http.routers.${APP_NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${APP_NAME}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}.entrypoints=web"
      - "traefik.http.routers.${APP_NAME}.service=${APP_NAME}"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=80"
      - "traefik.http.routers.${APP_NAME}-admin.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}-admin.entrypoints=admin"
      - "traefik.http.routers.${APP_NAME}-admin.service=${APP_NAME}-admin"
      - "traefik.http.services.${APP_NAME}-admin.loadbalancer.server.port=57710"
      - "traefik.docker.network=${NETWORK}"
  redis:
    image: redis:latest
    container_name: redis-${APP_NAME}
    restart: unless-stopped
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      TZ: ${TZ}
    networks:
      - internal
  workspace:
    image: tongkolspace/workspace
    container_name: workspace-${APP_NAME}
    build:
      context: ./workspace
      dockerfile: Dockerfile
    volumes:
      - ./php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/zz-custom-php.ini
      - ../${APP_TYPE}:/var/www/html
      - ./cron/cronjob-${APP_TYPE}:/tmp/cronjob
      - ./supervisor.conf/supervisor-cron.conf:/etc/supervisor/conf.d/supervisor-cron.conf
      - ./supervisor.conf/${APP_TYPE}.conf:/etc/supervisor/conf.d/${APP_TYPE}.conf
    env_file:
      - .env
    environment:
      TZ: "${TZ}"
    networks:
      - internal
      - external
  db:
    image: mysql:5.7
    container_name: db-${APP_NAME}
    restart: unless-stopped
    # ports:
    # Uncomment jika tidak ingin ekpsose
    # - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: "${WORDPRESS_DB_USER}"
      MYSQL_PASSWORD: "${WORDPRESS_DB_PASSWORD}"
      TZ: ${TZ}
    volumes:
      - ./mysql/config:/etc/mysql/conf.d
      - ./mysql/datadir:/var/lib/mysql
    networks:
      - external
      - internal
  pma:
    # Akses dengan http://domain/pma/ (wajib dengan slash)
    image: phpmyadmin/phpmyadmin
    container_name: pma-${APP_NAME}
    restart: unless-stopped
    environment:
      # https://docs.phpmyadmin.net/en/latest/setup.html#docker-environment-variables
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      UPLOAD_LIMIT: 50M
      PMA_ABSOLUTE_URI: "http://${DOMAIN}/pma/"
    links:
      - db:db
    networks:
      - internal
  redis-commander:
    container_name: redis-commander-${APP_NAME}
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: unless-stopped
    environment:
    - REDIS_HOSTS=local:redis:6379
    networks:
      - internal
networks:
  external:
    external: true
    name: ${NETWORK}
  internal:
