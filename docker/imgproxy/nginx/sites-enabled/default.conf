# main server
server {
    set $html_root /home;

    server_name                          _;
    root                                 $html_root;
    index                                index.html;

    access_log /var/log/nginx/nginx-imgproxy.access.log;
    error_log /var/log/nginx/nginx-imgproxy.error.log;

    # HTTP
    listen                               7070 reuseport default_server;
    listen                               [::]:7070 reuseport default_server;

    # SSL
    # listen                               443 ssl http2 reuseport;
    # listen                               [::]:443 ssl http2 reuseport;
    # ssl_certificate                      /etc/nginx/certs/server.crt;
    # ssl_certificate_key                  /etc/nginx/certs/server.key;

    # Proxy options
    proxy_http_version                      1.1;
    proxy_intercept_errors                  on;
    proxy_no_cache                          $arg_nocache;
    proxy_ssl_verify                        off;
    proxy_cache_background_update           off;
    proxy_cache_bypass                      $http_upgrade $arg_bypass $arg_debug $arg_nocache;
    proxy_cache_lock                        on;
    proxy_cache_lock_age                    5s;
    proxy_cache_lock_timeout                5s;
    proxy_cache_methods                     GET HEAD;
    proxy_cache_min_uses                    1;
    proxy_cache_revalidate                  on;
    proxy_cache_valid                       200 206 6h;
    proxy_cache_valid                       any 1m;
    proxy_cache_use_stale                   error timeout invalid_header updating
                                            http_429 http_500 http_502 http_503 http_504;

    # Proxy headers
    proxy_set_header Upgrade                $http_upgrade;
    proxy_set_header Connection             $connection_upgrade;
    proxy_set_header Host                   $host;
    proxy_set_header X-Real-IP              $remote_addr;
    proxy_set_header Forwarded              $proxy_add_forwarded;
    proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto      $scheme;
    proxy_set_header X-Forwarded-Host       $host;
    proxy_set_header X-Forwarded-Port       $server_port;

    # Proxy timeouts
    proxy_connect_timeout                   10s;
    proxy_send_timeout                      30s;
    proxy_read_timeout                      30s;

    # security headers
    add_header X-XSS-Protection             "1; mode=block" always;
    add_header X-Content-Type-Options       "nosniff" always;
    add_header Referrer-Policy              "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy      "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy           "interest-cohort=()" always;
    add_header Strict-Transport-Security    "max-age=31536000; includeSubDomains; preload" always;

    # gzip
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # . files
    location ~ /\.(?!well-known) {
        deny all;
    }

    # restrict methods
    if ($request_method !~ ^(GET|HEAD)$) {
        return '405';
    }

    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log    off;
    }

    # robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log    off;
    }

    # proxy handlers
    error_page 418 = @imgproxy;
    error_page 421 = @remote;

    if ($imgproxy_rewrite)           { return 418; }
    if ($origin_server ~ ^https?://) { return 421; }

    # error pages
    error_page 401 403 404 405 422 429 500 501 502 503 504 =404 @fallback;

    # for imgproxy server
    location @imgproxy {
        # fallback to error image and error HTTP status
        error_page 401 403 404 405 422 429  =404 @fallback;
        error_page 500 501 502 503 504      =503 @fallback;
        add_header X-Cache $upstream_cache_status;
        add_header X-Debug $debug_imgproxy_rewrite always;

        proxy_cache     $imgproxy_cache;
        proxy_cache_key $imgproxy_rewrite;
        proxy_pass      http://upstream_imgproxy${imgproxy_rewrite};
    }

    # for remote servers
    location @remote {
        # fallback to error image and error HTTP status
        error_page 401 403 404 405 422 429  =404 @fallback;
        error_page 500 501 502 503 504      =503 @fallback;
        add_header X-Origin ${origin_server}${origin_uri} always;

        etag off;
        proxy_pass ${origin_server}${origin_uri};
    }

    # for fallback
    location @fallback {
        internal;
        etag off;

        try_files $fallback_uri $fallback_uri/;
        add_header X-Fallback $fallback_uri always;
    }

    # for localhost
    location / {
        try_files $origin_uri $uri $uri/ =404;
    }
}
